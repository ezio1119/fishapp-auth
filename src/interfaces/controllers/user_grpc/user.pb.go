// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/interfaces/controllers/user_grpc/user.proto

package user_grpc

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b28024c82f63085, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CreateReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReq) Reset()         { *m = CreateReq{} }
func (m *CreateReq) String() string { return proto.CompactTextString(m) }
func (*CreateReq) ProtoMessage()    {}
func (*CreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b28024c82f63085, []int{1}
}

func (m *CreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReq.Unmarshal(m, b)
}
func (m *CreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReq.Marshal(b, m, deterministic)
}
func (m *CreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReq.Merge(m, src)
}
func (m *CreateReq) XXX_Size() int {
	return xxx_messageInfo_CreateReq.Size(m)
}
func (m *CreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReq proto.InternalMessageInfo

func (m *CreateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UpdateReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b28024c82f63085, []int{2}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b28024c82f63085, []int{3}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AddBlackListReq struct {
	Jti                  string             `protobuf:"bytes,1,opt,name=jti,proto3" json:"jti,omitempty"`
	Expiration           *duration.Duration `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AddBlackListReq) Reset()         { *m = AddBlackListReq{} }
func (m *AddBlackListReq) String() string { return proto.CompactTextString(m) }
func (*AddBlackListReq) ProtoMessage()    {}
func (*AddBlackListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b28024c82f63085, []int{4}
}

func (m *AddBlackListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlackListReq.Unmarshal(m, b)
}
func (m *AddBlackListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlackListReq.Marshal(b, m, deterministic)
}
func (m *AddBlackListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlackListReq.Merge(m, src)
}
func (m *AddBlackListReq) XXX_Size() int {
	return xxx_messageInfo_AddBlackListReq.Size(m)
}
func (m *AddBlackListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlackListReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlackListReq proto.InternalMessageInfo

func (m *AddBlackListReq) GetJti() string {
	if m != nil {
		return m.Jti
	}
	return ""
}

func (m *AddBlackListReq) GetExpiration() *duration.Duration {
	if m != nil {
		return m.Expiration
	}
	return nil
}

type CheckBlackListReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Jti                  string   `protobuf:"bytes,2,opt,name=jti,proto3" json:"jti,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckBlackListReq) Reset()         { *m = CheckBlackListReq{} }
func (m *CheckBlackListReq) String() string { return proto.CompactTextString(m) }
func (*CheckBlackListReq) ProtoMessage()    {}
func (*CheckBlackListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b28024c82f63085, []int{5}
}

func (m *CheckBlackListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckBlackListReq.Unmarshal(m, b)
}
func (m *CheckBlackListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckBlackListReq.Marshal(b, m, deterministic)
}
func (m *CheckBlackListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckBlackListReq.Merge(m, src)
}
func (m *CheckBlackListReq) XXX_Size() int {
	return xxx_messageInfo_CheckBlackListReq.Size(m)
}
func (m *CheckBlackListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckBlackListReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckBlackListReq proto.InternalMessageInfo

func (m *CheckBlackListReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CheckBlackListReq) GetJti() string {
	if m != nil {
		return m.Jti
	}
	return ""
}

type ID struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b28024c82f63085, []int{6}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserWithToken struct {
	User                 *User      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	TokenPair            *TokenPair `protobuf:"bytes,2,opt,name=token_pair,json=tokenPair,proto3" json:"token_pair,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserWithToken) Reset()         { *m = UserWithToken{} }
func (m *UserWithToken) String() string { return proto.CompactTextString(m) }
func (*UserWithToken) ProtoMessage()    {}
func (*UserWithToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b28024c82f63085, []int{7}
}

func (m *UserWithToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserWithToken.Unmarshal(m, b)
}
func (m *UserWithToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserWithToken.Marshal(b, m, deterministic)
}
func (m *UserWithToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserWithToken.Merge(m, src)
}
func (m *UserWithToken) XXX_Size() int {
	return xxx_messageInfo_UserWithToken.Size(m)
}
func (m *UserWithToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UserWithToken.DiscardUnknown(m)
}

var xxx_messageInfo_UserWithToken proto.InternalMessageInfo

func (m *UserWithToken) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserWithToken) GetTokenPair() *TokenPair {
	if m != nil {
		return m.TokenPair
	}
	return nil
}

type TokenPair struct {
	IdToken              string   `protobuf:"bytes,1,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenPair) Reset()         { *m = TokenPair{} }
func (m *TokenPair) String() string { return proto.CompactTextString(m) }
func (*TokenPair) ProtoMessage()    {}
func (*TokenPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b28024c82f63085, []int{8}
}

func (m *TokenPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenPair.Unmarshal(m, b)
}
func (m *TokenPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenPair.Marshal(b, m, deterministic)
}
func (m *TokenPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenPair.Merge(m, src)
}
func (m *TokenPair) XXX_Size() int {
	return xxx_messageInfo_TokenPair.Size(m)
}
func (m *TokenPair) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenPair.DiscardUnknown(m)
}

var xxx_messageInfo_TokenPair proto.InternalMessageInfo

func (m *TokenPair) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

func (m *TokenPair) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "user_grpc.User")
	proto.RegisterType((*CreateReq)(nil), "user_grpc.CreateReq")
	proto.RegisterType((*UpdateReq)(nil), "user_grpc.UpdateReq")
	proto.RegisterType((*LoginReq)(nil), "user_grpc.LoginReq")
	proto.RegisterType((*AddBlackListReq)(nil), "user_grpc.AddBlackListReq")
	proto.RegisterType((*CheckBlackListReq)(nil), "user_grpc.CheckBlackListReq")
	proto.RegisterType((*ID)(nil), "user_grpc.ID")
	proto.RegisterType((*UserWithToken)(nil), "user_grpc.UserWithToken")
	proto.RegisterType((*TokenPair)(nil), "user_grpc.TokenPair")
}

func init() {
	proto.RegisterFile("src/interfaces/controllers/user_grpc/user.proto", fileDescriptor_3b28024c82f63085)
}

var fileDescriptor_3b28024c82f63085 = []byte{
	// 687 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x6f, 0xd3, 0x4a,
	0x14, 0xd5, 0x38, 0x1f, 0x8d, 0x6f, 0xda, 0xd7, 0xf7, 0xa6, 0x7d, 0x6a, 0x6a, 0xbd, 0x3c, 0x2a,
	0xc3, 0x22, 0x48, 0x34, 0x46, 0xa9, 0x54, 0xe8, 0x32, 0x6e, 0x44, 0xa9, 0xa8, 0x04, 0x32, 0x2d,
	0x48, 0x20, 0x08, 0x53, 0xfb, 0x36, 0x1d, 0xea, 0xd8, 0x66, 0x3c, 0x69, 0xf9, 0x10, 0x0b, 0xfe,
	0x06, 0xff, 0x00, 0x56, 0xac, 0xf8, 0x71, 0x59, 0x21, 0x8f, 0xed, 0xd4, 0x4d, 0xbf, 0xd4, 0xdd,
	0x78, 0xee, 0xb9, 0x73, 0xce, 0xbd, 0x3e, 0x07, 0xac, 0x58, 0xb8, 0x16, 0x0f, 0x24, 0x8a, 0x03,
	0xe6, 0x62, 0x6c, 0xb9, 0x61, 0x20, 0x45, 0xe8, 0xfb, 0x28, 0x62, 0x6b, 0x14, 0xa3, 0xe8, 0x0f,
	0x44, 0xe4, 0xaa, 0x53, 0x3b, 0x12, 0xa1, 0x0c, 0xa9, 0x3e, 0xb9, 0x35, 0x96, 0x8e, 0x99, 0xcf,
	0x3d, 0x26, 0xd1, 0xca, 0x0f, 0x29, 0xc6, 0xb8, 0x35, 0x08, 0xc3, 0x81, 0x8f, 0x96, 0xfa, 0xda,
	0x1f, 0x1d, 0x58, 0x92, 0x0f, 0x31, 0x96, 0x6c, 0x18, 0x65, 0x80, 0xff, 0xa7, 0x01, 0xde, 0x48,
	0x30, 0xc9, 0xc3, 0xe0, 0xb2, 0xfa, 0x89, 0x60, 0x51, 0x84, 0x22, 0x4e, 0xeb, 0xe6, 0x6f, 0x02,
	0xe5, 0xbd, 0x18, 0x05, 0xfd, 0x0b, 0x34, 0xee, 0x35, 0xc8, 0x0a, 0x69, 0x95, 0x1c, 0x8d, 0x7b,
	0x94, 0x42, 0x39, 0x60, 0x43, 0x6c, 0x68, 0x2b, 0xa4, 0xa5, 0x3b, 0xea, 0x4c, 0x17, 0xa1, 0x82,
	0x43, 0xc6, 0xfd, 0x46, 0x49, 0x5d, 0xa6, 0x1f, 0x74, 0x03, 0xc0, 0x15, 0xc8, 0x24, 0x7a, 0x7d,
	0x26, 0x1b, 0xe5, 0x15, 0xd2, 0xaa, 0x77, 0x8c, 0x76, 0xca, 0xdb, 0xce, 0x79, 0xdb, 0xbb, 0xb9,
	0x70, 0x47, 0xcf, 0xd0, 0x5d, 0x99, 0xb4, 0x8e, 0x22, 0x2f, 0x6f, 0xad, 0x5c, 0xdf, 0x9a, 0xa1,
	0xbb, 0xd2, 0xfc, 0x46, 0x40, 0xdf, 0x54, 0x0f, 0x39, 0xf8, 0x81, 0x36, 0x33, 0xb5, 0x89, 0x7e,
	0xdd, 0xd6, 0xc7, 0x76, 0x55, 0x94, 0xff, 0x26, 0x0d, 0xc8, 0x84, 0x37, 0x73, 0xe1, 0x6a, 0x1a,
	0x7b, 0x66, 0x6c, 0x97, 0x85, 0xf6, 0x8e, 0xe4, 0x13, 0xac, 0x43, 0x2d, 0x62, 0x71, 0x7c, 0x12,
	0x0a, 0x2f, 0x1d, 0xcd, 0x36, 0xc6, 0xf6, 0x92, 0xf8, 0xb7, 0xb3, 0xf0, 0xf6, 0x75, 0x77, 0xf5,
	0x15, 0x5b, 0xfd, 0x7c, 0x7f, 0x75, 0xe3, 0xcd, 0x97, 0xf5, 0x7b, 0x0f, 0x3a, 0x5f, 0xef, 0x38,
	0x13, 0xac, 0xf9, 0x9d, 0x80, 0xbe, 0xa7, 0x14, 0x25, 0x1a, 0x96, 0x4e, 0x37, 0xa8, 0x18, 0x4c,
	0xad, 0x45, 0xd4, 0x2a, 0x9b, 0xc5, 0x55, 0x5e, 0x21, 0xae, 0x74, 0xad, 0xb8, 0xf2, 0x0d, 0xc4,
	0x31, 0xa8, 0xed, 0x84, 0x03, 0x1e, 0xa4, 0xeb, 0xc9, 0x28, 0xc8, 0xb5, 0x14, 0xda, 0x0d, 0x28,
	0x04, 0xcc, 0x77, 0x3d, 0xcf, 0xf6, 0x99, 0x7b, 0xb4, 0xc3, 0x63, 0x99, 0x30, 0x19, 0x50, 0x7a,
	0x2f, 0x79, 0xc6, 0x53, 0x1b, 0xdb, 0x15, 0x51, 0xfa, 0x45, 0x88, 0x93, 0x5c, 0xd2, 0x4d, 0x00,
	0xfc, 0x18, 0xf1, 0xd4, 0x9f, 0x8a, 0xa8, 0xde, 0x59, 0x3e, 0xf7, 0xb7, 0x7b, 0x99, 0x81, 0x55,
	0xf7, 0x4f, 0xa2, 0xd5, 0x88, 0x53, 0x68, 0x33, 0x1f, 0xc3, 0x3f, 0x9b, 0x87, 0xe8, 0x1e, 0x9d,
	0x61, 0xbd, 0x74, 0xf5, 0x99, 0x1c, 0xed, 0x02, 0x39, 0x66, 0x13, 0xb4, 0xed, 0xde, 0xa5, 0xad,
	0x26, 0x87, 0xb9, 0x24, 0x18, 0x2f, 0xb9, 0x3c, 0xdc, 0x0d, 0x8f, 0x30, 0xa0, 0xb7, 0xa1, 0x9c,
	0x24, 0x56, 0x61, 0xeb, 0x9d, 0xf9, 0xf6, 0x24, 0xbe, 0xed, 0x04, 0xe7, 0xa8, 0x22, 0x5d, 0x03,
	0x90, 0x09, 0xba, 0x1f, 0x31, 0x2e, 0xb2, 0x19, 0x17, 0x0b, 0x50, 0xf5, 0xd4, 0x33, 0xc6, 0x85,
	0xa3, 0xcb, 0xfc, 0x68, 0x3e, 0x01, 0x7d, 0x72, 0x4f, 0x97, 0xa1, 0xc6, 0xbd, 0xbe, 0x2a, 0xa6,
	0x6b, 0x74, 0x66, 0xb8, 0x97, 0x2b, 0x98, 0x13, 0x78, 0x20, 0x30, 0x3e, 0xcc, 0xea, 0x69, 0x38,
	0x67, 0xb3, 0x4b, 0x05, 0xea, 0xfc, 0x28, 0x41, 0x3d, 0x11, 0xf4, 0x1c, 0xc5, 0x31, 0x77, 0x91,
	0x3e, 0x84, 0x6a, 0x9a, 0x13, 0x5a, 0xd4, 0x31, 0x89, 0x8e, 0xd1, 0x98, 0x1a, 0xe4, 0x74, 0xe0,
	0xbb, 0x30, 0xb3, 0x85, 0xd2, 0xfe, 0xb4, 0xdd, 0xa3, 0x73, 0x05, 0xd0, 0x76, 0xcf, 0x98, 0x1e,
	0x9e, 0x5a, 0x50, 0x4d, 0x83, 0x70, 0x86, 0x64, 0x92, 0x8d, 0xf3, 0x0d, 0x6b, 0x50, 0xed, 0xa1,
	0x8f, 0x12, 0xa7, 0x9f, 0x3e, 0x1f, 0x7f, 0x3b, 0x0c, 0xfd, 0x17, 0xcc, 0x1f, 0x21, 0x5d, 0x87,
	0x8a, 0xb2, 0x34, 0x5d, 0x28, 0xf4, 0xe4, 0x26, 0xbf, 0x62, 0x90, 0x47, 0x30, 0x5b, 0xf4, 0x29,
	0x35, 0x0a, 0xc8, 0x29, 0x03, 0x5f, 0xc9, 0xff, 0x14, 0x96, 0xcf, 0x7a, 0xaf, 0x1b, 0x78, 0x5b,
	0x18, 0xa4, 0x24, 0xff, 0x15, 0xb7, 0x3b, 0xed, 0x50, 0xe3, 0x42, 0x0f, 0xec, 0x57, 0x15, 0xc9,
	0xda, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x52, 0xbd, 0xc9, 0xa8, 0x3c, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*UserWithToken, error)
	GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*User, error)
	Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*User, error)
	Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*UserWithToken, error)
	AddBlackList(ctx context.Context, in *AddBlackListReq, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	CheckBlackListAndGenToken(ctx context.Context, in *CheckBlackListReq, opts ...grpc.CallOption) (*TokenPair, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*UserWithToken, error) {
	out := new(UserWithToken)
	err := c.cc.Invoke(ctx, "/user_grpc.UserService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/user_grpc.UserService/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/user_grpc.UserService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/user_grpc.UserService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*UserWithToken, error) {
	out := new(UserWithToken)
	err := c.cc.Invoke(ctx, "/user_grpc.UserService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AddBlackList(ctx context.Context, in *AddBlackListReq, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/user_grpc.UserService/AddBlackList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CheckBlackListAndGenToken(ctx context.Context, in *CheckBlackListReq, opts ...grpc.CallOption) (*TokenPair, error) {
	out := new(TokenPair)
	err := c.cc.Invoke(ctx, "/user_grpc.UserService/CheckBlackListAndGenToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	Create(context.Context, *CreateReq) (*UserWithToken, error)
	GetByID(context.Context, *ID) (*User, error)
	Update(context.Context, *UpdateReq) (*User, error)
	Delete(context.Context, *ID) (*wrappers.BoolValue, error)
	Login(context.Context, *LoginReq) (*UserWithToken, error)
	AddBlackList(context.Context, *AddBlackListReq) (*wrappers.BoolValue, error)
	CheckBlackListAndGenToken(context.Context, *CheckBlackListReq) (*TokenPair, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) Create(ctx context.Context, req *CreateReq) (*UserWithToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserServiceServer) GetByID(ctx context.Context, req *ID) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedUserServiceServer) Update(ctx context.Context, req *UpdateReq) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedUserServiceServer) Delete(ctx context.Context, req *ID) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedUserServiceServer) Login(ctx context.Context, req *LoginReq) (*UserWithToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedUserServiceServer) AddBlackList(ctx context.Context, req *AddBlackListReq) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBlackList not implemented")
}
func (*UnimplementedUserServiceServer) CheckBlackListAndGenToken(ctx context.Context, req *CheckBlackListReq) (*TokenPair, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckBlackListAndGenToken not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_grpc.UserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Create(ctx, req.(*CreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_grpc.UserService/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetByID(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_grpc.UserService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Update(ctx, req.(*UpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_grpc.UserService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Delete(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_grpc.UserService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AddBlackList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBlackListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AddBlackList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_grpc.UserService/AddBlackList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AddBlackList(ctx, req.(*AddBlackListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CheckBlackListAndGenToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckBlackListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CheckBlackListAndGenToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_grpc.UserService/CheckBlackListAndGenToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CheckBlackListAndGenToken(ctx, req.(*CheckBlackListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user_grpc.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UserService_Create_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _UserService_GetByID_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UserService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _UserService_Delete_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _UserService_Login_Handler,
		},
		{
			MethodName: "AddBlackList",
			Handler:    _UserService_AddBlackList_Handler,
		},
		{
			MethodName: "CheckBlackListAndGenToken",
			Handler:    _UserService_CheckBlackListAndGenToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/interfaces/controllers/user_grpc/user.proto",
}
